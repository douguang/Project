#!/usr/bin/env python
# -*- coding: UTF-8 -*-
'''
Author      : Zhang Yongchen
Description : 最高等级地块分布
Name        :
Original    :
'''
import settings_dev
import pandas as pd
from utils import hql_to_df


def tmp_20170714_tiles(date):

    tiles_sql = '''
        select uid, account, tiles from parse_info where ds>='{0}' and uid in(
        '1000000245',
        '1000000251',
        '1000000135',
        '1000000121',
        '1000000182',
        '1000000172',
        '1000000166',
        '1000000202',
        '1000000031',
        '1000000239',
        '1000000092',
        '1000000076',
        '1000000059',
        '1000000083',
        '1000000034',
        '1000000163',
        '1000000073',
        '1000000124',
        '1000000097',
        '1000000193',
        '1000000254',
        '1000000323',
        '1000000053',
        '1000000068',
        '1000000157',
        '1000000178',
        '1000000188',
        '1000000110',
        '1000000143',
        '1000000115',
        '1000000199',
        '1000000056',
        '1000000281',
        '1000000169',
        '1000000101',
        '1000000222',
        '1000000236',
        '1000000011',
        '1000000216',
        '1000000025',
        '1000000149',
        '1000000086',
        '1000000306',
        '1000000312',
        '1000000062',
        '1000000196',
        '1000000103',
        '1000000273',
        '1000000040',
        '1000000324',
        '1000000138',
        '1000000234',
        '1000000297',
        '1000000283',
        '1000000117',
        '1000000267',
        '1000000220',
        '1000000144',
        '1000000150',
        '1000000013',
        '1000000028',
        '1000000259',
        '1000000321',
        '1000000141',
        '1000000213',
        '1000000177',
        '1000000317',
        '1000000240',
        '1000000129',
        '1000000262',
        '1000000155',
        '1000000225',
        '1000000036',
        '1000000095',
        '1000000081',
        '1000000279',
        '1000000185',
        '1000000274',
        '1000000260',
        '1000000104',
        '1000000098',
        '1000000233',
        '1000000290',
        '1000000284',
        '1000000164',
        '1000000170',
        '1000000033',
        '1000000118',
        '1000000194',
        '1000000247',
        '1000000304',
        '1000000289',
        '1000000071',
        '1000000315',
        '1000000132',
        '1000000242',
        '1000000256',
        '1000000309',
        '1000000079',
        '1000000265',
        '1000000271',
        '1000000042',
        '1000000295',
        '1000000152',
        '1000000089',
        '1000000120',
        '1000000134',
        '1000000077',
        '1000000197',
        '1000000173',
        '1000000302',
        '1000000131',
        '1000000125',
        '1000000229',
        '1000000206',
        '1000000054',
        '1000000248',
        '1000000090',
        '1000000298',
        '1000000200',
        '1000000027',
        '1000000123',
        '1000000137',
        '1000000051',
        '1000000276',
        '1000000039',
        '1000000286',
        '1000000292',
        '1000000231',
        '1000000250',
        '1000000063',
        '1000000058',
        '1000000217',
        '1000000203',
        '1000000167',
        '1000000226',
        '1000000291',
        '1000000052',
        '1000000111',
        '1000000105',
        '1000000316',
        '1000000072',
        '1000000255',
        '1000000096',
        '1000000082',
        '1000000176',
        '1000000162',
        '1000000022',
        '1000000161',
        '1000000019',
        '1000000191',
        '1000000218',
        '1000000264',
        '1000000114',
        '1000000151',
        '1000000102',
        '1000000055',
        '1000000139',
        '1000000249',
        '1000000099',
        '1000000232',
        '1000000156',
        '1000000142',
        '1000000179',
        '1000000285',
        '1000000209',
        '1000000046',
        '1000000189',
        '1000000319',
        '1000000084',
        '1000000008',
        '1000000180',
        '1000000253',
        '1000000310',
        '1000000074',
        '1000000287',
        '1000000230',
        '1000000258',
        '1000000128',
        '1000000113',
        '1000000263',
        '1000000294',
        '1000000280',
        '1000000223',
        '1000000088',
        '1000000043',
        '1000000057',
        '1000000244',
        '1000000313',
        '1000000030',
        '1000000148',
        '1000000238',
        '1000000087',
        '1000000093',
        '1000000186',
        '1000000241',
        '1000000035',
        '1000000021',
        '1000000212',
        '1000000145',
        '1000000235',
        '1000000282',
        '1000000116',
        '1000000041',
        '1000000314',
        '1000000300',
        '1000000257',
        '1000000127',
        '1000000108',
        '1000000278',
        '1000000184',
        '1000000080',
        '1000000293',
        '1000000044',
        '1000000050',
        '1000000107',
        '1000000075',
        '1000000061',
        '1000000009',
        '1000000085',
        '1000000201',
        '1000000215',
        '1000000171',
        '1000000015',
        '1000000168',
        '1000000147',
        '1000000078',
        '1000000308',
        '1000000270',
        '1000000198',
        '1000000190',
        '1000000023',
        '1000000174',
        '1000000094',
        '1000000006',
        '1000000029',
        '1000000181',
        '1000000252',
        '1000000165',
        '1000000032',
        '1000000140',
        '1000000154',
        '1000000277',
        '1000000064',
        '1000000070',
        '1000000243',
        '1000000133',
        '1000000037',
        '1000000160',
        '1000000269',
        '1000000195',
        '1000000119',
        '1000000136',
        '1000000122',
        '1000000246',
        '1000000305',
        '1000000311',
        '1000000091',
        '1000000299')
    '''.format(date)
    print tiles_sql
    tiles_df = hql_to_df(tiles_sql)
    uid, account, tiles_id_list, count_list = [], [], [], []
    for _, row in tiles_df.iterrows():
        tiles_nodes = eval(row['tiles'])
        tiles_id = ''
        count = ''
        if type(tiles_nodes) == list and len(tiles_nodes) != 0:
            tiles_id = len(tiles_nodes)
            count = tiles_nodes[len(tiles_nodes) - 1]
        elif type(tiles_nodes) == dict:
            # value_list = []
            # for i in tiles_nodes.keys():
            #     value_list.append(i)
            # tiles_id = max(value_list)
            value_list = tiles_nodes.keys()
            tiles_id = value_list[len(value_list) - 1]
            count = tiles_nodes[tiles_id]
        uid.append(row.uid)
        account.append(row.account)
        tiles_id_list.append(tiles_id)
        count_list.append(count)
    result = pd.DataFrame({'uid': uid, 'account': account, 'tiles_id': tiles_id_list, 'count': count_list})
    return result


if __name__ == '__main__':
    settings_dev.set_env('SLG_test')
    result = tmp_20170714_tiles('20170713')
    # print result.head(10)
    result.to_excel(r'E:\Data\output\SLG\tiles.xlsx')
